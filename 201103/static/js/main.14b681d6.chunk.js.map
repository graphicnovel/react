{"version":3,"sources":["component/Boxoffice.js","App.js","reportWebVitals.js","index.js"],"names":["Boxoffice","useState","movie","setMovie","useEffect","$","ajax","url","type","success","data","dailyList","boxOfficeResult","dailyBoxOfficeList","console","log","aa","map","list","k","rnum","movieNm","audiAcc","openDt","className","conArr","App","cpnt","setCpnt","onClick","e","target","tagName","menuId","textContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAmEeA,MA5Df,WAAqB,IAAD,EAEQC,qBAFR,mBAEXC,EAFW,KAEJC,EAFI,KAoChB,OAhCAC,qBAAU,WACNC,IAAEC,KAAK,CACHC,IAAI,qJACJC,KAAK,MACLC,QAAQ,SAASC,GACb,IAAIC,EAAYD,EAAKE,gBAAgBC,mBAGrC,GAFAC,QAAQC,IAAIJ,IAETA,EAkBH,MAAO,GAdP,IAAIK,EAAKL,EAAUM,KAAI,SAACC,EAAKC,GACzB,OACI,+BACI,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,UACV,6BAAKH,EAAKI,UACV,6BAAKJ,EAAKK,WAJLJ,MASjBhB,EAASa,QAOnB,IAGE,mCACI,sBAAKQ,UAAU,MAAf,UACI,gEACA,2DACA,wIACA,kCACI,gCACI,+BACI,8CACA,8CACA,iEACA,yDAIR,gCACKtB,aCxDrBuB,G,MAAS,CACX,MAAQ,6BACR,MAAQ,6BACR,UAAY,cAAC,EAAD,MAmCCC,MAhCf,WAAgB,IAAD,EAESzB,mBAASwB,EAAM,OAFxB,mBAERE,EAFQ,KAEFC,EAFE,KAgBb,OACE,qCACA,yBAAQC,QAdV,SAAaC,GACX,GAAwB,MAArBA,EAAEC,OAAOC,QAAgB,CAC1B,IAAIC,EAASH,EAAEC,OAAOG,YACtBN,EAAQH,EAAOQ,IAIjB,MACE,CAACN,SAMH,UACE,sCACA,sCACA,6CAEF,+BACE,8BACCA,UCvBQQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.14b681d6.chunk.js","sourcesContent":["import React,{ useEffect, useState } from 'react';\r\nimport $ from 'jquery';\r\n\r\nfunction Ajax(){\r\n\r\n}\r\n\r\nfunction Boxoffice(){\r\n\r\n    let [movie, setMovie] = useState();\r\n\r\n    useEffect(()=>{\r\n        $.ajax({\r\n            url:'http://www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json?key=a19363b71f9ddc7b3a6f54cb159fc8ad&targetDt=20201102',\r\n            type:'GET',\r\n            success:function(data){\r\n                let dailyList = data.boxOfficeResult.dailyBoxOfficeList;\r\n                console.log(dailyList);\r\n\r\n                if(dailyList){\r\n\r\n                \r\n\r\n                let aa = dailyList.map((list,k)=>{\r\n                    return(\r\n                        <tr key={k}>\r\n                            <td>{list.rnum}</td>\r\n                            <td>{list.movieNm}</td>\r\n                            <td>{list.audiAcc}</td>\r\n                            <td>{list.openDt}</td>\r\n                        </tr>\r\n                    );\r\n                });\r\n\r\n                setMovie(aa);\r\n\r\n            }else{\r\n                return('');\r\n            }\r\n            }\r\n        });\r\n    },[]);\r\n\r\n    return(\r\n        <>\r\n            <div className=\"box\">\r\n                <h2>박스오피스</h2>\r\n                <h3>날짜 : 2020-11-02</h3>\r\n                <p>출처: 영화진흥위원회 통합전산망 오픈API</p>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>순위</th>\r\n                            <th>제목</th>\r\n                            <th>누적 관객수</th>\r\n                            <th>개봉일</th>\r\n                        </tr>\r\n                    </thead>\r\n                        \r\n                    <tbody>\r\n                        {movie}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default Boxoffice;","import React, {useState} from 'react';\nimport Boxoffice from './component/Boxoffice';\nimport './App.css';\n\nlet conArr = {\n  'nav01':\"컨포넌트01\",\n  'nav02':\"컨포넌트02\",\n  'Boxoffice':<Boxoffice />\n}\n\nfunction App() {\n\n  let [cpnt, setCpnt] = useState(conArr['nav01']);\n\n  function Nav(e){\n    if(e.target.tagName === 'A'){\n      let menuId = e.target.textContent;\n      setCpnt(conArr[menuId]);\n    }\n    \n\n    return(\n      {cpnt}\n    );\n  }\n  \n  return (\n    <>\n    <header onClick={Nav}>\n      <a>nav01</a>\n      <a>nav02</a>\n      <a>Boxoffice</a>\n    </header>\n    <main>\n      <div>\n      {cpnt}\n      </div>\n    </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}